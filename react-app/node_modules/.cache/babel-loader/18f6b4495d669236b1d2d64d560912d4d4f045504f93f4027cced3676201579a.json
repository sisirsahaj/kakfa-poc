{"ast":null,"code":"var _jsxFileName = \"/Users/sisirdas/Projects/health-kit/consumer-webapp/kafka-websocket-consumer/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport useWebSocket from 'react-use-websocket';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [deviceData, setDeviceData] = useState({});\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: [{\n      label: 'ECG Data',\n      data: [],\n      borderColor: 'rgb(75, 192, 192)',\n      tension: 0.1\n    }]\n  });\n  const {\n    lastMessage\n  } = useWebSocket('ws://localhost:3001');\n  useEffect(() => {\n    if (lastMessage !== null) {\n      const messageContent = lastMessage.data;\n      console.log(messageContent);\n      const [deviceId, ecgDataString] = messageContent.split(':');\n      const ecgData = parseFloat(ecgDataString); // Ensure ecgData is a number\n\n      setDeviceData(prev => ({\n        ...prev,\n        [deviceId]: [...(prev[deviceId] || []), ecgData]\n      }));\n\n      // Update chart data directly using the new ecgData\n      setChartData(prev => ({\n        ...prev,\n        labels: [...prev.labels, prev.labels.length + 1],\n        datasets: prev.datasets.map(dataset => ({\n          ...dataset,\n          data: [...dataset.data, ecgData] // Use ecgData directly\n        }))\n      }));\n    }\n  }, [lastMessage]); // Remove deviceData from dependency array\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Kafka Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"REdKimwj1fizlPbD4tRR3TUNYik=\", false, function () {\n  return [useWebSocket];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useWebSocket","Line","jsxDEV","_jsxDEV","App","_s","deviceData","setDeviceData","chartData","setChartData","labels","datasets","label","data","borderColor","tension","lastMessage","messageContent","console","log","deviceId","ecgDataString","split","ecgData","parseFloat","prev","length","map","dataset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sisirdas/Projects/health-kit/consumer-webapp/kafka-websocket-consumer/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport useWebSocket from 'react-use-websocket';\nimport { Line } from 'react-chartjs-2';\n\nfunction App() {\n  const [deviceData, setDeviceData] = useState({});\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: [\n      {\n        label: 'ECG Data',\n        data: [],\n        borderColor: 'rgb(75, 192, 192)',\n        tension: 0.1,\n      },\n    ],\n  });\n  const { lastMessage } = useWebSocket('ws://localhost:3001');\n\nuseEffect(() => {\n  if (lastMessage !== null) {\n    const messageContent = lastMessage.data;\n    console.log(messageContent);\n    const [deviceId, ecgDataString] = messageContent.split(':');\n    const ecgData = parseFloat(ecgDataString); // Ensure ecgData is a number\n\n    setDeviceData(prev => ({\n      ...prev,\n      [deviceId]: [...(prev[deviceId] || []), ecgData],\n    }));\n\n    // Update chart data directly using the new ecgData\n    setChartData(prev => ({\n      ...prev,\n      labels: [...prev.labels, prev.labels.length + 1],\n      datasets: prev.datasets.map(dataset => ({\n        ...dataset,\n        data: [...dataset.data, ecgData], // Use ecgData directly\n      })),\n    }));\n  }\n}, [lastMessage]); // Remove deviceData from dependency array\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>Kafka Messages</h2>\n        <Line data={chartData} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC;IACzCY,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,UAAU;MACjBC,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE,mBAAmB;MAChCC,OAAO,EAAE;IACX,CAAC;EAEL,CAAC,CAAC;EACF,MAAM;IAAEC;EAAY,CAAC,GAAGhB,YAAY,CAAC,qBAAqB,CAAC;EAE7DD,SAAS,CAAC,MAAM;IACd,IAAIiB,WAAW,KAAK,IAAI,EAAE;MACxB,MAAMC,cAAc,GAAGD,WAAW,CAACH,IAAI;MACvCK,OAAO,CAACC,GAAG,CAACF,cAAc,CAAC;MAC3B,MAAM,CAACG,QAAQ,EAAEC,aAAa,CAAC,GAAGJ,cAAc,CAACK,KAAK,CAAC,GAAG,CAAC;MAC3D,MAAMC,OAAO,GAAGC,UAAU,CAACH,aAAa,CAAC,CAAC,CAAC;;MAE3Cd,aAAa,CAACkB,IAAI,KAAK;QACrB,GAAGA,IAAI;QACP,CAACL,QAAQ,GAAG,CAAC,IAAIK,IAAI,CAACL,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAEG,OAAO;MACjD,CAAC,CAAC,CAAC;;MAEH;MACAd,YAAY,CAACgB,IAAI,KAAK;QACpB,GAAGA,IAAI;QACPf,MAAM,EAAE,CAAC,GAAGe,IAAI,CAACf,MAAM,EAAEe,IAAI,CAACf,MAAM,CAACgB,MAAM,GAAG,CAAC,CAAC;QAChDf,QAAQ,EAAEc,IAAI,CAACd,QAAQ,CAACgB,GAAG,CAACC,OAAO,KAAK;UACtC,GAAGA,OAAO;UACVf,IAAI,EAAE,CAAC,GAAGe,OAAO,CAACf,IAAI,EAAEU,OAAO,CAAC,CAAE;QACpC,CAAC,CAAC;MACJ,CAAC,CAAC,CAAC;IACL;EACF,CAAC,EAAE,CAACP,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEjB,oBACEb,OAAA;IAAK0B,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClB3B,OAAA;MAAQ0B,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5B3B,OAAA;QAAA2B,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvB/B,OAAA,CAACF,IAAI;QAACY,IAAI,EAAEL;MAAU;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAC7B,EAAA,CA/CQD,GAAG;EAAA,QAacJ,YAAY;AAAA;AAAAmC,EAAA,GAb7B/B,GAAG;AAiDZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}